@model Booking
@inject SignInManager<IdentityUser> SignInManager


@{
    var rooms = ViewData["RoomTypes"] as List<SelectListItem>;
}


<h1>Add Booking</h1>
<hr />

@if (SignInManager.IsSignedIn(User))
{
    <div class="row">
        <div class="col-md-6">
            <form asp-action="AddBooking" method="post">
                <div asp-validation-summary="ModelOnly" claclass="text-danger"></div>

                <div class="form-group">
                    <label asp-for="ChecKIn" class="control-label"></label>
                    <input asp-for="ChecKIn" class="form-control" />
                    <span asp-validation-for="ChecKIn" class="text-danger"></span>
                </div>

                <div>
                    <label asp-for="CheckOut" class="control-label"></label>
                    <input asp-for="CheckOut" class="form-control" />
                    <span asp-validation-for="CheckOut" class="text-danger"></span>
                
                </div>
                
                <div class="form-group">
                    <label asp-for="RoomType" class="control-label"></label>
                    <select asp-for="RoomTypeId" asp-items="rooms" class="form-control"></select>
                </div>

                <div class="form-group">
                    <label asp-for="NumberOfRooms" class="control-label"></label>
                    <input asp-for="NumberOfRooms" class="form-control" />
                    <span asp-validation-for="NumberOfRooms" class="text-danger"></span>
                </div>

                <br>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">BookRoom</button>
                </div>
            </form>
        </div>
    </div>
}

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }